export SPACESHIP_VI_MODE_SHOW=false
export ZSH_THEME="spaceship"

export ZSH=$HOME/.oh-my-zsh
source $ZSH/oh-my-zsh.sh

export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'

# # Bash shell executes this function just before displaying the PS1 variable
# export PROMPT_COMMAND='updatePrompt'

# File where we'll keep this machine's aliases
test -f ~/.zshrc.aliases && source ~/.zshrc.aliases

# Any other local zshrc config
test -f ~/.zshrc.loc && source ~/.zshrc.loc

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# For bat highlighting in fzf preview window:
export BAT_THEME="TwoDark"
# export BAT_STYLE=""
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
--color=dark
--color=fg:-1,bg:-1,hl:#c678dd,fg+:#ffffff,bg+:#4b5263,hl+:#d858fe
--color=info:#98c379,prompt:#61afef,pointer:#be5046,marker:#e5c07b,spinner:#61afef,header:#61afef
'
bindkey "^P" fzf-file-widget

alias ddi='docker container rm $(docker container ls -aq) && docker rmi $(docker images -f "dangling=true" -q)'
alias di='docker images'
alias gs='git status'
alias gc='git commit'
unalias gb
alias gb='fzf-git-branch'
unalias gco
alias gco='fzf-git-checkout'
alias ga='git add'
alias gr='git rebase'
alias gst='git stash'
alias gstp='git stash pop'
alias grc='git rebase --continue'
alias gca='git commit --amend'
alias gri='git rebase -i HEAD~'
alias gria='git rebase -i develop --autosquash'

alias plug='nvim --headless +PlugInstall +qa +UpdateRemotePlugins'
alias vim="nvim"
alias vi="vi"
alias v="nvim"
alias td="tmux detach"
alias ta="tmux attach -d -t"
alias tl="tmux ls"
alias kc="kubectl"
alias grep="rg"
alias af="git diff --name-only | xargs autoflake --in-place --remove-all-unused-imports --remov-unused-variables"

set -o vi

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

export PATH="$PYENV_ROOT/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
if command -v pyenv 1>/dev/null 2>&1; then
	eval "$(pyenv init -)"
fi
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

export EDITOR="nvim"

fzf-git-branch() {
    git rev-parse HEAD > /dev/null 2>&1 || return

    git branch --color=always --all --sort=-committerdate |
        grep -v HEAD |
        fzf --height 50% --ansi --no-multi --preview-window right:65% \
            --preview 'git log -n 50 --color=always --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed "s/.* //" <<< {})' |
        sed "s/.* //"
}

fzf-git-checkout() {
    git rev-parse HEAD > /dev/null 2>&1 || return

    local branch

    branch=$(fzf-git-branch)
    if [[ "$branch" = "" ]]; then
        echo "No branch selected."
        return
    fi

    # If branch name starts with 'remotes/' then it is a remote branch. By
    # using --track and a remote branch name, it is the same as:
    # git checkout -b branchName --track origin/branchName
    if [[ "$branch" = 'remotes/'* ]]; then
        git checkout --track $branch
    else
        git checkout $branch;
    fi
}

export CODE_DIR="$HOME/Documents/code"
function cd {
    builtin cd "$@"
    if [ -f ".aliases" ]; then
        source .aliases && echo "Active .aliases"
    fi
    if [ -f "$CODE_DIR/venvs/${PWD##*/}/bin/activate" ]; then
        source "$CODE_DIR/venvs/${PWD##*/}/bin/activate"
    else
        deactivate
    fi
}

set -o vi
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
